from scrapy.spiders import Spider
from scrapy.selector import Selector
from scrapy.http import Request, Response,FormRequest
from tutorial.items import GenericItem
from scrapy.utils.response import open_in_browser
import json
import urllib
from datetime import datetime



allowed_domains = ["azurewebsites.net"]


# max_id = 00500
# payload = "{\"prefixText\":\"R2261\",\"count\":\"10 \",\"contextKey\":\"swparkercad\"}"
# payload = "{\"prefixText\":\"R2261\",\"count\":\"10 \",\"contextKey\":\"swparkercad\"}"

# ERR AT http://iswdataclient.azurewebsites.net/webProperty.aspx?dbkey=palopintotax&stype=id&sdata=R000005029&time=201705091945056&id=R000005029
# another err http://iswdataclient.azurewebsites.net/webProperty.aspx?dbkey=palopintotax&stype=id&sdata=R000001538&time=201705111044031&id=R000001538

headers = {
    'origin': "http://iswdataclient.azurewebsites.net",
    'x-requested-with': "XMLHttpRequest",
    'user-agent': "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.87 Safari/537.36",
    'content-type': "application/json; charset=UTF-8",
    'accept': "*/*",
    'referer': "http://iswdataclient.azurewebsites.net/webSearchid.aspx?dbkey=palopintotax",
    'accept-encoding': "gzip, deflate",
    'accept-language': "en-US,en;q=0.8",
    # 'cookie': "ASP.NET_SessionId=tnrqoffjqtyga10ofk4g3f2y; ARRAffinity=292912aafac2aaae7b7bea3b35c12d38ba96b1150ee324dbc3c1e28cb790fc6c",
    'cache-control': "no-cache",

    }

# start_urls = [
#     "http://iswdataclient.azurewebsites.net/webSearchID.aspx?dbkey=parkercad"
# ]

# http://iswdataclient.azurewebsites.net/webProperty.aspx?dbkey=parkercad&stype=id&sdata=R5000&time=201606071512013&id=R000005000



class Texas_county_spider(Spider):

    name = "{{cookiecutter.name}}"


    def start_requests(self):

        contextKey = self.contextkey

        # docket_parts_list = re.findall('\d+|\D+', self.docket)

        # start_num = int(docket_parts_list[1])
        # end_num = int(self.records) + start_num

        for i in range(min_id,max_id,1):

            payload = json.dumps({"prefixText":'r'+str(i).zfill(9),"count":"10 ","contextKey":"swpalopintocad"})
            print(payload)
            yield Request('http://iswdataclient.azurewebsites.net/AutoCompleteID.asmx/GetList', method="post",  headers= headers, body=payload, callback=self.parse_get_account)


    def parse_get_account(self, response):

        j = json.loads(response.body_as_unicode())
        # from scrapy.shell import inspect_response
        # inspect_response(response, self)
        if j['d'][0] != "":
            item = GenericItem()
            item['account'] = j['d'][0]
            return self.create_appraisal_and_tax_urls(item)
            print("back here"+str(item))

        print "hello"
        # open_in_browser(j['d'][0])

    def create_appraisal_and_tax_urls(self, item):

        base_url = "http://iswdataclient.azurewebsites.net/webSearchID.aspx"

        # querystring = {"dbkey":"parkercad","stype":"id","sdata":"R000000027","time":"201606041604022"}
        appraisal_querystring = {"dbkey":"palopintocad","stype":"id","sdata":item['account'],"time":self.get_time()}
        tax_querystring = {"dbkey":"palopintotax","stype":"id","sdata":item['account'],"time":self.get_time()}

        appraisal_url = base_url + '?' + urllib.urlencode(appraisal_querystring)
        tax_url = base_url + '?' + urllib.urlencode(tax_querystring)
        # print (base_url + '?' + urllib.urlencode(querystring))


        yield Request(method="GET", url=appraisal_url, headers=headers, callback=self.parse_appraisal_search_page, meta={'item': item, 'tax_url':tax_url})



    def parse_appraisal_search_page(self, response):
        # from scrapy.shell import inspect_response
        # inspect_response(response, self)
        item = response.meta['item'] # {'account': u'R000000015'}
        tax_url = response.meta['tax_url'] # {'account': u'R000000015'}
        # open_in_browser(response)
        # name = response.selector.xpath('//*[@id="webprop_name"]/text()').extract()
        # address = response.selector.xpath('//*[@id="webprop_mailaddress"]/text()').extract()
        market_value = response.selector.xpath('//*[@id="dvPrimary"]/table//td[7]/text()').extract()

        # item["name"] = name[0]
        # item["address"] = address[0]
        # item["market_value"] = market_value[0]

        # open_in_browser(response)




        link_id = "ucResultsGrid_"+item['account']
        xp= ('//*[@id="%s"]/@href')%link_id
        js_parameter_value_list = response.selector.xpath(xp).re(r'javascript:WebForm_DoPostBackWithOptions\(new WebForm_PostBackOptions\("(.*?)", "(.*?)", (.*?), "(.*?)", "(.*?)", (.*?), (.*?)\)\)')
         # function WebForm_PostBackOptions(eventTarget, eventArgument, validation, validationGroup, actionUrl, trackFocus, clientSubmit) {
        js_parameter_key_list = ['eventTarget', 'eventArgument', 'validation', 'validationGroup', 'actionUrl', 'trackFocus', 'clientSubmit']
        formdata = self.create_parameter_dictionary(js_parameter_key_list,js_parameter_value_list)
        url = formdata['actionUrl']
        print("hi"+str(item))
        # http://iswdataclient.azurewebsites.net/webProperty.aspx?dbkey=parkercad&stype=id&sdata=R5000&time=201606071512013&id=R000005000&__EVENTARGUMENT=&__EVENTTARGET=ucResultsGrid%24R000005000&__EVENTVALIDATION=%2FwEdAAXgiABT3dP%2BP7xdr7sJzrFEgDogs%2FAUlxcLgUb6Xs2XdgEPYawHvbP6SjVflfll4f%2FSYjWClRzXekk3TXXvZ3zgq8Nr40D8TdCsKh4gRCYC7BxgByCauk2iQ7B%2BwnOVF5t6HUeE5EMnugqxoNKs6aUX&__PREVIOUSPAGE=EEQuUf6jhjGgzOm2Z-NHsX_kmQSy-EIlBzPiwD2N0cYpH_vSB0CUOhhMDSRTYEoed0aR1WmFFdRF_hhF5lwtznJNwQF9ziB-MxnnIdFfOoK2KL1UofzVeL-VfxbAmIMu0&__VIEWSTATE=%2FwEPDwULLTExMTY0NjY1MzYPZBYCAgMPZBYKAgMPZBYIAgEPFgIeCWlubmVyaHRtbAViPGltZyBzcmM9J3N3ZkJhbm5lci9wYXJrZXJfY291bnR5X2FwcHJhaXNhbF9kaXN0cmljdC5wbmcnIGFsdD0nUEFSS0VSIENPVU5UWSBBUFBSQUlTQUwgRElTVFJJQ1QnLz5kAgMPDxYEHgtQb3N0QmFja1VybAU0fi93ZWJJbmRleC5hc3B4P2Ria2V5PXBhcmtlcmNhZCZ0aW1lPTIwMTYwNjA3MTUxMjAxMx4HVmlzaWJsZWhkZAIFDw8WBB8BBVF%2BL3dlYnNlYXJjaGlkLmFzcHg%2FZGJrZXk9cGFya2VyY2FkJnN0eXBlPWlkJnNkYXRhPVI1MDAwJmlkPSZ0aW1lPTIwMTYwNjA3MTUxMjAxMyMfAmhkZAIHDxYCHwJoZAIFD2QWDgICDxYCHgRocmVmBSJ3ZWJTZWFyY2hOYW1lLmFzcHg%2FZGJrZXk9cGFya2VyY2FkZAIEDxYCHwMFJXdlYlNlYXJjaEFkZHJlc3MuYXNweD9kYmtleT1wYXJrZXJjYWRkAgYPFgIfAwUjd2ViU2VhcmNoTGVnYWwuYXNweD9kYmtleT1wYXJrZXJjYWRkAggPFgIfAwUjd2ViU2VhcmNoR2VvSUQuYXNweD9kYmtleT1wYXJrZXJjYWRkAgoPFgIfAwUdd2ViSW5kZXguYXNweD9kYmtleT1wYXJrZXJjYWRkAhAPD2QWAh4Kb25rZXlwcmVzcwUzcmV0dXJuIGNsaWNrQnV0dG9uKGV2ZW50LCd1Y1NlYXJjaElEX0J1dHRvblNlYXJjaCcpZAISDxYEHg1Vc2VDb250ZXh0S2V5Zx4KQ29udGV4dEtleQULc3dwYXJrZXJjYWRkAgcPZBYKAgEPFgIfAmcWAmYPZBYCAgEPFgQfAAVBPHNwYW4gc3R5bGU9ImZvbnQtc2l6ZToxMHB4OyI%2BSW5mb3JtYXRpb24gVXBkYXRlZCA2LzcvMjAxNjwvc3Bhbj4fAmdkAgMPFgIfAmgWAgIBDw8WAh8BBUx%2BL3dlYlByb3BlcnR5LmFzcHg%2FZGJrZXk9cGFya2VyY2FkJnN0eXBlPWlkJnNkYXRhPVI1MDAwJnRpbWU9MjAxNjA2MDcxNTEyMDEzZGQCBQ9kFgICAQ8PFgIfAQVRfi93ZWJQcm9wZXJ0eVRheGVzLmFzcHg%2FZGJrZXk9cGFya2VyY2FkJnN0eXBlPWlkJnNkYXRhPVI1MDAwJnRpbWU9MjAxNjA2MDcxNTEyMDEzZGQCBw9kFgICAQ8PFgIfAQVTfi93ZWJQcm90ZXN0UHJvcGVydHkuYXNweD9kYmtleT1wYXJrZXJjYWQmc3R5cGU9aWQmc2RhdGE9UjUwMDAmdGltZT0yMDE2MDYwNzE1MTIwMTNkZAIJDxYEHwAFQTxzcGFuIHN0eWxlPSJmb250LXNpemU6MTBweDsiPkluZm9ybWF0aW9uIFVwZGF0ZWQgNi83LzIwMTY8L3NwYW4%2BHwJoZAIJDw8WAh4EVGV4dAUtWW91ciBzZWFyY2ggb2YgJyBSNTAwMCAnIHJldHVybmVkIDEgcmVzdWx0KHMpZGQCCw8PFgIfBwW2AUlmIHRoZSBWaWV3IFByb3BlcnR5IGxpbmsgaXMgbm90IHdvcmtpbmcsIHBsZWFzZSBwdXQgSW50ZXJuZXQgRXhwbG9yZXIgaW4gY29tcGF0aWJpbHR5IG1vZGUuICBUaGlzIGNhbiBiZSBkb25lIGJ5IHByZXNzaW5nIEFMVC1YIEIgYW5kIHRoZW4gYWRkaW5nIHd3dy5pc291dGh3ZXN0ZGF0YS5jb20gdG8gdGhlIGxpc3QuZGRky9lsdci0tBRyXZO15rGteZK2ZnrUlLk2CKOJaLmu4Mg%3D&__VIEWSTATEGENERATOR=C3BDF3AE&hfPropArray=R000005000&hiddenInputToUpdateATBuffer_CommonToolkitScripts=1&ucSearchID%24searchid=
        #         yield FormRequest.from_response(response,formname='searchForm', formdata={'recherche_distance_km_0':'20', 'recherche_type_logement':'9'},callback=self.parse_detail_page,meta={'item': item})
        x=  FormRequest.from_response(response, formname='searchForm', headers=headers, url=url, callback=self.parse_appraisal_detail_page, meta={'item': item, 'tax_url':tax_url})
        yield x
    # https://blog.scrapinghub.com/2016/04/20/scrapy-tips-from-the-pros-april-2016-edition/

    def parse_appraisal_detail_page(self, response):

        item = response.meta['item']
        tax_url = response.meta['tax_url']# {'account': u'R000000015'}
        # market_value = response.selector.xpath('//*[@id="dvPrimary"]/table//td[7]/text()').extract()
        improvements = response.xpath('//*[@id="histimp0_yr"]/text()').extract_first()
        item["improvements"] = improvements
        name = response.xpath('//*[@id="webprop_name"]/text()').extract_first()

        if response.xpath('//th[@id="hist0_yr"]/text()').extract_first()=='2017':
            item['market_value_2017'] = response.xpath('//td[@id="histmkt0_yr"]/text()').extract_first()
            item['market_value_2016'] = response.xpath('//td[@id="histmkt1_yr"]/text()').extract_first()
            print '2017'
        else:
            item['market_value_2017'] = '0'
            item['market_value_2016'] = response.xpath('//td[@id="histmkt0_yr"]/text()').extract_first()
        # open_in_browser(response)
        # http: // iswdataclient.azurewebsites.net / webPropertyMap.aspx?dbkey = parkercad & stype = id & sdata = R5000 & id = R000005000 & time = 201705121501006
        # http: // iswdataclient.azurewebsites.net / webProperty.aspx?dbkey = parkercad & stype = id & sdata = R5000 & time = 201606071512013 & id = R000005000


        # if 'visibility: visible' in response.xpath('//td[@id="ucTabs_tdPropertyMap"]').xpath('@style').extract_first():
        link_id = "ucTabs_tdPropertyMap"
        xp = ('//*[@id="%s"]/a/@href') % link_id
        js_parameter_value_list = response.selector.xpath(xp).re(
            r'javascript:WebForm_DoPostBackWithOptions\(new WebForm_PostBackOptions\("(.*?)", "(.*?)", (.*?), "(.*?)", "(.*?)", (.*?), (.*?)\)\)')
        url = 'http://iswdataclient.azurewebsites.net/' + js_parameter_value_list[4]
        item['map_exists'] = url




        item["name"] = name

        # open_in_browser(response)
        address = response.selector.xpath('//*[@id="webprop_mailaddress"]/text()').extract()

        item["acres"] =response.selector.xpath('//*[@id="webprop_desc"]/text()').extract_first().split(',')[0].split(':')[2]

        item["legal_description"] =response.selector.xpath('//*[@id="webprop_desc"]/text()').extract_first().split(',')[1].strip()

        item["ownership_percentage"] =response.selector.xpath('//*[@id="webprop_interest"]/text()').extract_first().split(':')[1]
        # address = ','.join(response.xpath('//*[@id="webprop_mailaddress"]/text()').extract()).strip()

        try:
            item["address"] = address[0]
            item["city"] = address[1].split(',')[0]
            item["state"] = address[1].split(',')[1].split()[0]
            item["zip"] = address[1].split(',')[1].split()[1]
        except:
            # open_in_browser(response)
            item["city"] = address[-1].split(',')[0]
            item["state"] = address[-1].split(',')[1].split()[0]
            item["zip"] = address[-1].split(',')[1].split()[1]
            del address[-1]

            if address and len(address)>1:
                item["address"] = ','.join(address)
            elif address and len(address)==1:
                item["address"] = address[0]

        print 'gg'

        #  item["address"] = JOIN REMAINING ELEMENTS ID THEY EXIST

        # item["market_value"] = market_value[0]
        # link_id = "ucTabs_lbPropertyTaxes"
        # xp= ('//*[@id="%s"]/@href')%link_id
        # js_parameter_value_list = response.selector.xpath(xp).re(r'javascript:WebForm_DoPostBackWithOptions\(new WebForm_PostBackOptions\("(.*?)", "(.*?)", (.*?), "(.*?)", "(.*?)", (.*?), (.*?)\)\)')
        # url = js_parameter_value_list[4]
        # print("hi"+str(item))

        cookies = {
            'ASP.NET_SessionId': 'g4ir3gxhznvrtwbdhcfcavld',
            'ARRAffinity': '62fb1bab381f21cbb67fc1cc445496f1f0a2b28af200121b40c7d93299a979e5',
        }

        headers = {
            'Origin': 'http://iswdataclient.azurewebsites.net',
            'Accept-Encoding': 'gzip, deflate',
            'Accept-Language': 'en-US,en;q=0.8',
            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36',
            'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',
            'Accept': '*/*',
            # 'Referer': 'http://iswdataclient.azurewebsites.net/webProperty.aspx?dbkey=palopintocad&stype=id&sdata=R000000004&time=201705151933036&id=R000000004',
            'Referer': url,
            'X-Requested-With': 'XMLHttpRequest',
            'Connection': 'keep-alive',
        }
        data = [
            ('getIDs', 'true'),
            ('table', 'palopintocad'),
            ('ids', "'"+item['account']+"'")
        ]
        payload = urllib.urlencode(data)
        payload.replace('%27', "'")

        x= Request('http://iswdataclient.azurewebsites.net/mapHandler.ashx', method="post",headers=headers, body=payload,cookies=cookies, callback=self.is_map_valid,meta={'item': item,'tax_url':tax_url})

        # x=  FormRequest.from_response(response,formname='form1', headers=headers , url='http://iswdataclient.azurewebsites.net/mapHandler.ashx',  callback=self.is_map_valid,meta={'item': item,'tax_url':tax_url})
        yield x


    def is_map_valid(self, response):

        item = response.meta['item']
        tax_url = response.meta['tax_url']# {'account': u'R000000015'}
        d = json.loads(response.body)
        points = d.get('points')

        if not points:
            print "no map"
            item['map_exists'] = 'no'


        yield Request(method="GET", url=tax_url, headers=headers, callback=self.parse_tax_search_page, meta={'item': item})


    def parse_tax_search_page(self, response):
        # from scrapy.shell import inspect_response
        # inspect_response(response, self)
        item = response.meta['item']  # {'account': u'R000000015'}


        # open_in_browser(response)




        link_id = "ucResultsGrid_" + item['account']
        xp = ('//*[@id="%s"]/@href') % link_id
        js_parameter_value_list = response.selector.xpath(xp).re(
            r'javascript:WebForm_DoPostBackWithOptions\(new WebForm_PostBackOptions\("(.*?)", "(.*?)", (.*?), "(.*?)", "(.*?)", (.*?), (.*?)\)\)')
        # function WebForm_PostBackOptions(eventTarget, eventArgument, validation, validationGroup, actionUrl, trackFocus, clientSubmit) {
        js_parameter_key_list = ['eventTarget', 'eventArgument', 'validation', 'validationGroup', 'actionUrl',
                                 'trackFocus', 'clientSubmit']
        formdata = self.create_parameter_dictionary(js_parameter_key_list, js_parameter_value_list)
        url = formdata['actionUrl']
        print("hi" + str(item))
        # http://iswdataclient.azurewebsites.net/webProperty.aspx?dbkey=parkercad&stype=id&sdata=R5000&time=201606071512013&id=R000005000&__EVENTARGUMENT=&__EVENTTARGET=ucResultsGrid%24R000005000&__EVENTVALIDATION=%2FwEdAAXgiABT3dP%2BP7xdr7sJzrFEgDogs%2FAUlxcLgUb6Xs2XdgEPYawHvbP6SjVflfll4f%2FSYjWClRzXekk3TXXvZ3zgq8Nr40D8TdCsKh4gRCYC7BxgByCauk2iQ7B%2BwnOVF5t6HUeE5EMnugqxoNKs6aUX&__PREVIOUSPAGE=EEQuUf6jhjGgzOm2Z-NHsX_kmQSy-EIlBzPiwD2N0cYpH_vSB0CUOhhMDSRTYEoed0aR1WmFFdRF_hhF5lwtznJNwQF9ziB-MxnnIdFfOoK2KL1UofzVeL-VfxbAmIMu0&__VIEWSTATE=%2FwEPDwULLTExMTY0NjY1MzYPZBYCAgMPZBYKAgMPZBYIAgEPFgIeCWlubmVyaHRtbAViPGltZyBzcmM9J3N3ZkJhbm5lci9wYXJrZXJfY291bnR5X2FwcHJhaXNhbF9kaXN0cmljdC5wbmcnIGFsdD0nUEFSS0VSIENPVU5UWSBBUFBSQUlTQUwgRElTVFJJQ1QnLz5kAgMPDxYEHgtQb3N0QmFja1VybAU0fi93ZWJJbmRleC5hc3B4P2Ria2V5PXBhcmtlcmNhZCZ0aW1lPTIwMTYwNjA3MTUxMjAxMx4HVmlzaWJsZWhkZAIFDw8WBB8BBVF%2BL3dlYnNlYXJjaGlkLmFzcHg%2FZGJrZXk9cGFya2VyY2FkJnN0eXBlPWlkJnNkYXRhPVI1MDAwJmlkPSZ0aW1lPTIwMTYwNjA3MTUxMjAxMyMfAmhkZAIHDxYCHwJoZAIFD2QWDgICDxYCHgRocmVmBSJ3ZWJTZWFyY2hOYW1lLmFzcHg%2FZGJrZXk9cGFya2VyY2FkZAIEDxYCHwMFJXdlYlNlYXJjaEFkZHJlc3MuYXNweD9kYmtleT1wYXJrZXJjYWRkAgYPFgIfAwUjd2ViU2VhcmNoTGVnYWwuYXNweD9kYmtleT1wYXJrZXJjYWRkAggPFgIfAwUjd2ViU2VhcmNoR2VvSUQuYXNweD9kYmtleT1wYXJrZXJjYWRkAgoPFgIfAwUdd2ViSW5kZXguYXNweD9kYmtleT1wYXJrZXJjYWRkAhAPD2QWAh4Kb25rZXlwcmVzcwUzcmV0dXJuIGNsaWNrQnV0dG9uKGV2ZW50LCd1Y1NlYXJjaElEX0J1dHRvblNlYXJjaCcpZAISDxYEHg1Vc2VDb250ZXh0S2V5Zx4KQ29udGV4dEtleQULc3dwYXJrZXJjYWRkAgcPZBYKAgEPFgIfAmcWAmYPZBYCAgEPFgQfAAVBPHNwYW4gc3R5bGU9ImZvbnQtc2l6ZToxMHB4OyI%2BSW5mb3JtYXRpb24gVXBkYXRlZCA2LzcvMjAxNjwvc3Bhbj4fAmdkAgMPFgIfAmgWAgIBDw8WAh8BBUx%2BL3dlYlByb3BlcnR5LmFzcHg%2FZGJrZXk9cGFya2VyY2FkJnN0eXBlPWlkJnNkYXRhPVI1MDAwJnRpbWU9MjAxNjA2MDcxNTEyMDEzZGQCBQ9kFgICAQ8PFgIfAQVRfi93ZWJQcm9wZXJ0eVRheGVzLmFzcHg%2FZGJrZXk9cGFya2VyY2FkJnN0eXBlPWlkJnNkYXRhPVI1MDAwJnRpbWU9MjAxNjA2MDcxNTEyMDEzZGQCBw9kFgICAQ8PFgIfAQVTfi93ZWJQcm90ZXN0UHJvcGVydHkuYXNweD9kYmtleT1wYXJrZXJjYWQmc3R5cGU9aWQmc2RhdGE9UjUwMDAmdGltZT0yMDE2MDYwNzE1MTIwMTNkZAIJDxYEHwAFQTxzcGFuIHN0eWxlPSJmb250LXNpemU6MTBweDsiPkluZm9ybWF0aW9uIFVwZGF0ZWQgNi83LzIwMTY8L3NwYW4%2BHwJoZAIJDw8WAh4EVGV4dAUtWW91ciBzZWFyY2ggb2YgJyBSNTAwMCAnIHJldHVybmVkIDEgcmVzdWx0KHMpZGQCCw8PFgIfBwW2AUlmIHRoZSBWaWV3IFByb3BlcnR5IGxpbmsgaXMgbm90IHdvcmtpbmcsIHBsZWFzZSBwdXQgSW50ZXJuZXQgRXhwbG9yZXIgaW4gY29tcGF0aWJpbHR5IG1vZGUuICBUaGlzIGNhbiBiZSBkb25lIGJ5IHByZXNzaW5nIEFMVC1YIEIgYW5kIHRoZW4gYWRkaW5nIHd3dy5pc291dGh3ZXN0ZGF0YS5jb20gdG8gdGhlIGxpc3QuZGRky9lsdci0tBRyXZO15rGteZK2ZnrUlLk2CKOJaLmu4Mg%3D&__VIEWSTATEGENERATOR=C3BDF3AE&hfPropArray=R000005000&hiddenInputToUpdateATBuffer_CommonToolkitScripts=1&ucSearchID%24searchid=
        #         yield FormRequest.from_response(response,formname='searchForm', formdata={'recherche_distance_km_0':'20', 'recherche_type_logement':'9'},callback=self.parse_detail_page,meta={'item': item})
        x = FormRequest.from_response(response, formname='searchForm', headers=headers, url=url,
                                      callback=self.parse_tax_detail_page,
                                      meta={'item': item})
        yield x

    def parse_tax_detail_page(self, response): # JUST GETTING TO TAX TAB

        item = response.meta['item']

        # open_in_browser(response)

        link_id = "ucTabs_lbPropertyTaxes"
        xp= ('//*[@id="%s"]/@href')%link_id
        js_parameter_value_list = response.selector.xpath(xp).re(r'javascript:WebForm_DoPostBackWithOptions\(new WebForm_PostBackOptions\("(.*?)", "(.*?)", (.*?), "(.*?)", "(.*?)", (.*?), (.*?)\)\)')
        url = js_parameter_value_list[4]
        print("hi"+str(item))
        x=  FormRequest.from_response(response,formname='form1', headers=headers , url=url,  callback=self.parse_tax_tab,meta={'item': item})
        yield x



    def parse_tax_tab(self, response):
        item = response.meta['item']
        # open_in_browser(response)

        taxes_owed = response.selector.xpath('//*[@id="tableBills"]/tr[1]/td[8]/text()').extract()
        item["taxes_owed"] = taxes_owed[0]
        print("hi"+str(item))

        return item



    def create_parameter_dictionary(self,klist,vlist):
        return dict(zip(klist, vlist))

    def get_time(self):
        d = datetime.utcnow()
        format = "%Y%m%d%H%M%S%f"
        return d.strftime(format)[:-5]


        # http://stackoverflow.com/questions/8467700/how-do-i-merge-results-from-target-page-to-current-page-in-scrapy


        # payload['account']=item['account']
        # yield Request('my_second_url', method="post",  headers= headers, body=payload, callback=self.parse_the_second_post_result)

# curl -X POST -H "Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8" -H "Origin: http://iswdataclient.azurewebsites.net" -H "X-DevTools-Emulate-Network-Conditions-Client-Id: 4C9E88E7-1FE0-4F7F-97BD-A17D8054330D" -H "Upgrade-Insecure-Requests: 1" -H "User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/44.0.2403.125 Safari/537.36" -H "Content-Type: application/x-www-form-urlencoded" -H "Referer: http://iswdataclient.azurewebsites.net/webSearchID.aspx?dbkey=parkercad&stype=id&sdata=R5000&time=201606070140006" -H "Accept-Encoding: gzip, deflate" -H "Accept-Language: en-US,en;q=0.8" -H "Cookie: ASP.NET_SessionId=t4du0sxfur141afnn2rfkper; ARRAffinity=c0062b2bbbe7e41106726b8ea7ac1098528990095887e69589ab21a2634d0906" -H "Cache-Control: no-cache" -H "Postman-Token: e78fa818-0a04-93f7-20e3-5c3fe61e2e44" -d '__EVENTARGUMENT=&__EVENTTARGET=ucResultsGrid$R000005000&__EVENTVALIDATION=/wEdAAU+lIQ5c/hpCycvj/Ot3f1ygDogs/AUlxcLgUb6Xs2XdgEPYawHvbP6SjVflfll4f/SYjWClRzXekk3TXXvZ3zgq8Nr40D8TdCsKh4gRCYC7Pm8i8h5aDccdAvlC3EIV0AxNb7xtSwlEJu3H5o/F7gE&__PREVIOUSPAGE=EEQuUf6jhjGgzOm2Z-NHsX_kmQSy-EIlBzPiwD2N0cYpH_vSB0CUOhhMDSRTYEoed0aR1WmFFdRF_hhF5lwtznJNwQF9ziB-MxnnIdFfOoK2KL1UofzVeL-VfxbAmIMu0&__VIEWSTATE=/wEPDwULLTExMTY0NjY1MzYPZBYCAgMPZBYKAgMPZBYIAgEPFgIeCWlubmVyaHRtbAViPGltZyBzcmM9J3N3ZkJhbm5lci9wYXJrZXJfY291bnR5X2FwcHJhaXNhbF9kaXN0cmljdC5wbmcnIGFsdD0nUEFSS0VSIENPVU5UWSBBUFBSQUlTQUwgRElTVFJJQ1QnLz5kAgMPDxYEHgtQb3N0QmFja1VybAU0fi93ZWJJbmRleC5hc3B4P2Ria2V5PXBhcmtlcmNhZCZ0aW1lPTIwMTYwNjA5MDAzMTAwMB4HVmlzaWJsZWhkZAIFDw8WBB8BBVF+L3dlYnNlYXJjaGlkLmFzcHg/ZGJrZXk9cGFya2VyY2FkJnN0eXBlPWlkJnNkYXRhPVI1MDAwJmlkPSZ0aW1lPTIwMTYwNjA5MDAzMTAwMCMfAmhkZAIHDxYCHwJoZAIFD2QWDgICDxYCHgRocmVmBSJ3ZWJTZWFyY2hOYW1lLmFzcHg/ZGJrZXk9cGFya2VyY2FkZAIEDxYCHwMFJXdlYlNlYXJjaEFkZHJlc3MuYXNweD9kYmtleT1wYXJrZXJjYWRkAgYPFgIfAwUjd2ViU2VhcmNoTGVnYWwuYXNweD9kYmtleT1wYXJrZXJjYWRkAggPFgIfAwUjd2ViU2VhcmNoR2VvSUQuYXNweD9kYmtleT1wYXJrZXJjYWRkAgoPFgIfAwUdd2ViSW5kZXguYXNweD9kYmtleT1wYXJrZXJjYWRkAhAPD2QWAh4Kb25rZXlwcmVzcwUzcmV0dXJuIGNsaWNrQnV0dG9uKGV2ZW50LCd1Y1NlYXJjaElEX0J1dHRvblNlYXJjaCcpZAISDxYEHg1Vc2VDb250ZXh0S2V5Zx4KQ29udGV4dEtleQULc3dwYXJrZXJjYWRkAgcPZBYKAgEPFgIfAmcWAmYPZBYCAgEPFgQfAAVBPHNwYW4gc3R5bGU9ImZvbnQtc2l6ZToxMHB4OyI+SW5mb3JtYXRpb24gVXBkYXRlZCA2LzgvMjAxNjwvc3Bhbj4fAmdkAgMPFgIfAmgWAgIBDw8WAh8BBUx+L3dlYlByb3BlcnR5LmFzcHg/ZGJrZXk9cGFya2VyY2FkJnN0eXBlPWlkJnNkYXRhPVI1MDAwJnRpbWU9MjAxNjA2MDkwMDMxMDAwZGQCBQ9kFgICAQ8PFgIfAQVRfi93ZWJQcm9wZXJ0eVRheGVzLmFzcHg/ZGJrZXk9cGFya2VyY2FkJnN0eXBlPWlkJnNkYXRhPVI1MDAwJnRpbWU9MjAxNjA2MDkwMDMxMDAwZGQCBw9kFgICAQ8PFgIfAQVTfi93ZWJQcm90ZXN0UHJvcGVydHkuYXNweD9kYmtleT1wYXJrZXJjYWQmc3R5cGU9aWQmc2RhdGE9UjUwMDAmdGltZT0yMDE2MDYwOTAwMzEwMDBkZAIJDxYEHwAFQTxzcGFuIHN0eWxlPSJmb250LXNpemU6MTBweDsiPkluZm9ybWF0aW9uIFVwZGF0ZWQgNi84LzIwMTY8L3NwYW4+HwJoZAIJDw8WAh4EVGV4dAUtWW91ciBzZWFyY2ggb2YgJyBSNTAwMCAnIHJldHVybmVkIDEgcmVzdWx0KHMpZGQCCw8PFgIfBwW2AUlmIHRoZSBWaWV3IFByb3BlcnR5IGxpbmsgaXMgbm90IHdvcmtpbmcsIHBsZWFzZSBwdXQgSW50ZXJuZXQgRXhwbG9yZXIgaW4gY29tcGF0aWJpbHR5IG1vZGUuICBUaGlzIGNhbiBiZSBkb25lIGJ5IHByZXNzaW5nIEFMVC1YIEIgYW5kIHRoZW4gYWRkaW5nIHd3dy5pc291dGh3ZXN0ZGF0YS5jb20gdG8gdGhlIGxpc3QuZGRkzaMQWVhlhwQMDB8ytfHJWHIMwpQzqHoiRIW7YkZn5LQ=&__VIEWSTATEGENERATOR=C3BDF3AE&hfPropArray=R000005000&hiddenInputToUpdateATBuffer_CommonToolkitScripts=1&ucSearchID$searchid=' "http://iswdataclient.azurewebsites.net/webProperty.aspx?dbkey=parkercad&stype=id&sdata=R5000&time=201606090031000&id=R000005000"